一、单表查询练习
1.查询姓“李”的老师的个数
select count(*) '姓李老师的个数' from teacher where t_name like '李%';
2.查询男女生人数个数
select count(*) 人数,s_sex from student group by s_sex;
3.查询同名同姓学生名单，并统计同名人数
select count(*) 人数,s_name from student group by s_name having count(*)>1;
4.1981年出生的学生名单
select * from student where year(s_age) = 1981;
5.查询平均成绩大于60分的同学的学号和平均成绩
select s_id,avg(score) from sc group by s_id having avg(score) >60;
6.求选了课程的学生人数
select count(distinct c_id) from sc group by s_id;
7.查询至少选修两门课程的学生学号
select count(*) '课程数' ,s_id  '学生ID' from sc group by s_id having count(*) >=2;
8.查询各科成绩最高和最低的分。以如下形式显示：课程ID，最高分，最低分
select c_id '课程ID',max(score) '最高分',min(score) '最低分' from sc group by c_id;
9.统计每门课程的学生选修人数。要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列
select count(*) '选修人数',c_id '课程号' from sc group by c_id order by count(*) desc,c_id asc;
10.打印入职时间超过38年的员工信息
select * from emp where now()-year(hiredate) > 38;
11.把hiredate列看做是员工的生日,求本月过生日的员工
select * from emp where month(hiredate) = month(now());
12.把hiredate列看做是员工的生日,求下月过生日的员工
select * from emp where date_add(month(now()), interval 1 month) = month(hiredate) ;
13.求1980年下半年入职的员工
select * from emp where month(hiredate)>6;
14.请用两种的方式查询所有名字长度为4的员工的员工编号,姓名
方式1：
select empno, ename from emp where length(ename) =4;
方式2：
select empno, ename from emp where ename like '____';
15.显示各种职位的最低工资
select min(sal),job from emp group by job;
16.求1980年各个月入职的的员工个数
select count(*) from emp group by hiredate having year(hiredate)=1980;
17.查询每个部门的最高工资
select max(sal),deptno from emp group by deptno;
18.查询每个部门,每种职位的最高工资
select max(sal),deptno,job from emp group by deptno,job;
19.查询各部门的总工资和平均工资
select sum(sal) '总工资',avg(sal) '平均工资' from emp group by deptno;
20.查询10号部门,20号部门的平均工资（尝试用多种写法）
select avg(sal) '平均工资',deptno from emp group by deptno having deptno=10 or deptno=20;
21.查询平均工资高于2000元的部门编号和平均工资
select deptno,avg(sal) from emp group by deptno having avg(sal) >=2000;
22.统计公司里经理的人数
select count(*) '经理人数',from emp group by job having job='MANAGER';
23.查询工资最高的3名员工信息
select * from emp order by sal desc limit 3;
查询工资由高到低第6到第10的员工信息
select * from emp order by sal desc limit 6,10;
二、表连接查询练习
1.查询李四学习的课程，考试分数，课程的授课老师
select c.c_name,score,t_name from student s inner join sc on(s.s_id = sc.s_id)
inner join course c on (sc.c_id = c.c_id)
inner join teacher t on (c.t_id = t.t_id)
where s_name='李四';

2.查询王五有哪些课程没选，显示这些课程名称
select cname from course c where c.c_id not in(select sc.c_id from student s inner join sc on(s.s_id = sc.s_id)inner join course c on (sc.c_id = c.c_id) where s.s_name = '王五');

3.查询所有同学的学号、姓名、选课数、总成绩
select s.s_id,s.s_name,count(*),sum(score) from student s inner join sc on(s.s_id = sc.s_id)
	       inner join course c on (sc.c_id = c.c_id) group by s.s_id;

4.查询所有课程成绩都小于等于60分的同学的学号、姓名；
select s.s_id,s.s_name from student s inner join sc on(s.s_id = sc.s_id)
	       inner join course c on (sc.c_id = c.c_id)

5.查询没有学全所有课的同学的学号、姓名；
select s.s_id,s.s_name,count(*) from student s inner join sc on(s.s_id = sc.s_id)
	       inner join course c on (sc.c_id = c.c_id) group by sc.s_id having
	       (count(*)<7);

6.查询每门课程选修人数，格式为课程名称，人数；
select count(*),cname from sc inner join course c on (sc.c_id = c.c_id) group by cname;
查询出只选修了一门课程的全部学生的学号和姓名 ；
select s.s_id,s_name from student s inner join sc on (s.s_id = sc.s_id) group by sc.s_id having
(count(*)=1);

7.查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列
select avg(score),c.cname from sc inner join course c on (sc.c_id = c.c_id) group by sc.c_id
order by avg(score) asc,sc.c_id desc;

8.查询学生平均成绩大于80的所有学生的学号、姓名和平均成绩
select s.s_id,avg(score) from student s inner join sc on(s.s_id = sc.s_id)
	       inner join course c on (sc.c_id = c.c_id) group by s.s_id having(avg(score)>80);

9.查询课程相同且成绩相同的的学生的学号、课程号、学生成绩
select a.* from sc a inner join (select c_id,score from sc group by c_id,score
having(count(*)>=2)) b on a.c_id=b.c_id and a.score=b.score;
10.查询全部学生都选修的课程的课程号和课程名
select sc.c_id,c.c_name,s_id from sc inner join course c on(sc.c_id = c.c_id) group by s_id;
11.查询两门以上不及格课程的同学的学号及其平均成绩
select avg(score),s_id from sc where score <60 group by s_id,score having(count(*) >2) ;
三、子查询练习
1.查询所有课程成绩都小于等于60分的同学的学号、姓名
select s.s_id,s_name from student s where s_id in (select s_id from sc group by s_id having max(score)<60);
2.查询没有学全所有课的同学的学号、姓名
select s_name ,s.s_id from student s inner join
(select count(*),s_id from sc group by s_id having count(*)<(select count(*) from course)) b
on s.s_id = b.s_id;
3.查询每门课程选修人数，格式为课程名称，人数
select c.c_name 课程名称,b.count 人数 from course c inner join
(select count(*) count,c_id from sc group by c_id) b
on b.c_id = c.c_id;
4.查询全部学生都选修的课程的课程号和课程名
select c.c_id,c_name from course c inner join
(select count(*),c_id from sc group by sc.c_id having count(*) = (select count(*) from student)) b
on c.c_id = b.c_id;

5.查询两门以上不及格课程的同学的学号及其平均成绩
select sc.s_id,avg(score) from sc inner join
(select s_id from sc where score<60 group by s_id having count(*)>=2) b
on sc.s_id = b.s_id;
6.查询2号课程成绩比1号课程成绩低的学生的学号、姓名
select s.s_id,s.s_name from (select a.s_id from (select s_id,c_id,score from sc where c_id=1) a
inner join (select s_id,c_id,score from sc where c_id=2)b on a.s_id=b.s_id and a.score>b.score) c
inner join student s where c.s_id=s.s_id;
7.查询学过1号课程并且也学过编号2号课程的同学的学号、姓名
select * from (select a.s_id from (select s_id from sc where c_id=2)
inner join (select s_id from sc where c_id=1) b on a.s_id = b.s_id) c
inner join student s
on s.s_id = c.s_id;
8.查询没学过“叶平”老师课的同学的学号、姓名
select s_name,s.s_id from student s inner join
(select sc.s_id,sc.c_id from sc inner join (select c_id from course c inner join teacher t on c.t_id = t.t_id where t.t_name = '叶平') a on sc.c_id = a.c_id) c
on s.s_id = c.s_id;